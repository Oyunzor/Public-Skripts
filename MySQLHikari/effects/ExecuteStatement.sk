import:
	java.sql.Connection
	java.sql.Statement
	java.sql.ResultSet
	java.sql.ResultSetMetaData
	ch.njol.skript.variables.Variables

effect execute %text% in %object% [1Â¦and store [[the] (output|result)[s]] (to|in) [the] [var[iable]] %-objects%]:
	trigger:

		delay the effect

		set {_statement} to (expr-2).createStatement()

		if (parse mark) is not 1:

			try {_statement}.executeUpdate(expr-1)

			set (the last sql error) to (the last java error)
		
		else:

			("%the raw expr-3%").endsWith("::*}") is true

			set {_resultSet} to try {_statement}.executeQuery(expr-1)

			set (the last sql error) to (the last java error)

			set {_resultSetMetaData} to {_resultSet}.getMetaData()

			set {_columnCount} to {_resultSetMetaData}.getColumnCount()

			if ("%the raw expr-3%").startsWith("{_") is true:
				set {_local} to true
				set {_targetVar} to (subtext of ("%the raw expr-3%") from characters 3 to ((length of ("%the raw expr-3%")) - 2))
			else:
				set {_local} to false
				set {_targetVar} to (subtext of ("%the raw expr-3%") from characters 2 to ((length of ("%the raw expr-3%")) - 2))

			try {_resultSet}.last()

			if {_resultSet}.getRow() > 0:

				{_resultSet}.first()
			
				while {_resultSet}.next() is true:

					set {_i} to 1

					while {_i} <= {_columnCount}:

						Variables.setVariable("%{_targetVar}%%{_resultSetMetaData}.getColumnName({_i})%::%{_resultSet}.getRow()%", {_resultSet}.getObject({_i}), event, {_local})

						add 1 to {_i}
			
			else:

				set {_i} to 1

				while {_i} <= {_columnCount}:

					Variables.setVariable("%{_targetVar}%%{_resultSetMetaData}.getColumnName({_i})%", {_resultSetMetaData}.getColumnName({_i}), event, true)

					add 1 to {_i}
		
		continue
