import:
	java.lang.Class
	com.zaxxer.hikari.HikariConfig
	com.zaxxer.hikari.HikariDataSource
	ch.njol.skript.variables.Variables

effect set %object% to [the] database %text%:
	trigger:

		if ("%the raw expr-1%").startsWith("{_") is true:
			set {_local} to true
			set {_dsVar} to (subtext of ("%the raw expr-1%") from characters 3 to ((length of ("%the raw expr-1%")) - 1))
		else:
			set {_local} to false
			set {_dsVar} to (subtext of ("%the raw expr-1%") from characters 2 to ((length of ("%the raw expr-1%")) - 1))
		set {_ds} to Variables.getVariable("%{_dsVar}%::datasource", event, {_local})

		try {_ds}.close()

		set {_db::*} to split expr-2 at "?"
		set {_userfind::*} to split {_db::2} at "user="
		set {_user::*} to split {_userfind::2} at "&"
		set {_passwordfind::*} to split {_db::2} at "password="
		set {_password::*} to split {_passwordfind::2} at "&"
		if {_userfind::1}.endsWith("&") is true:
			set {_db::1} to "%{_db::1}%?%subtext of ({_userfind::1}) from characters 1 to ((length of ({_userfind::1})) - 1)%"

		set {_hikari} to new HikariConfig()
		{_hikari}.setJdbcUrl("jdbc:%{_db::1}%")
		{_hikari}.setUsername({_user::1})
		{_hikari}.setPassword({_password::1})

		{_hikari}.setMaximumPoolSize(3)
		{_hikari}.setMaxLifetime(30000)


		{_hikari}.addDataSourceProperty("cachePrepStmts", "true")
		{_hikari}.addDataSourceProperty("prepStmtCacheSize", "250")
		{_hikari}.addDataSourceProperty("prepStmtCacheSqlLimit", "2048")
		{_hikari}.addDataSourceProperty("useServerPrepStmts", "true")
		{_hikari}.addDataSourceProperty("useLocalSessionState", "true")
		{_hikari}.addDataSourceProperty("rewriteBatchedStatements", "true")
		{_hikari}.addDataSourceProperty("cacheResultSetMetadata", "true")
		{_hikari}.addDataSourceProperty("cacheServerConfiguration", "true")
		{_hikari}.addDataSourceProperty("elideSetAutoCommits", "true")
		{_hikari}.addDataSourceProperty("maintainTimeStats", "false")

		set {_dbsource} to new HikariDataSource({_hikari})

		set (the raw expr-1) to {_dbsource}.getConnection()
		Variables.setVariable("%{_dsVar}%::datasource", {_dbsource}, event, {_local})
